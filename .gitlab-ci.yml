image: docker:latest
services:
  - docker:dind


stages:
  - build
  - package
  - deploy

cache:
  paths:
    - .python/

docker-build:
  stage: package
  only:
    - /^rc-.*$/
  script:
    - docker build -t registry.gitlab.com/zburau/joinflyline:latest -f devops/docker/django/Dockerfile .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push registry.gitlab.com/zburau/joinflyline:latest

k8s-deploy:
  image: google/cloud-sdk
  stage: deploy
  only:
    - /^rc-.*$/
  script:
  - kubectl config set-cluster ${KUBE_CLUSTER} --server=$KUBE_URL --insecure-skip-tls-verify=true
  - kubectl config set-credentials admin  --token=$KUBE_TOKEN
  - kubectl config set-context ${KUBE_CONTEXT} --cluster=${KUBE_CLUSTER} --user=admin
  - kubectl config use-context ${KUBE_CONTEXT}
  - kubectl delete secret gitlab-registry --ignore-not-found -n ${KUBE_NAMESPACE} ${KUBE_NAMESPACE}
  - kubectl delete secret gce-service-account-key --ignore-not-found -n ${KUBE_NAMESPACE}
  - kubectl delete secret api-keys --ignore-not-found -n ${KUBE_NAMESPACE}
  - kubectl create secret docker-registry gitlab-registry --docker-server=${CI_REGISTRY} --docker-username=${CI_REGISTRY_USER} --docker-password=${CI_REGISTRY_PASSWORD} --docker-email=${CI_REGISTRY_EMAIL} -n ${KUBE_NAMESPACE}
  - kubectl create secret generic gce-service-account-key --from-file=${GCE_SERVICE_ACCOUNT_KEY} -n ${KUBE_NAMESPACE}
  - kubectl create secret generic api-keys --from-literal=STRIPE_API_KEY=${STRIPE_API_KEY} --from-literal=POSTGRES_PASSWORD=${POSTGRES_PASSWORD} -n ${KUBE_NAMESPACE}
  - kubectl apply -f devops/k8s/env.yml -n ${KUBE_NAMESPACE}
  - sed -ie "s/THIS_STRING_IS_REPLACED_DURING_BUILD/$(date)/g" devops/k8s/deployment.yml
  - kubectl apply -f devops/k8s/deployment.yml -n ${KUBE_NAMESPACE}
  - kubectl apply -f devops/k8s/ingress.yml -n ${KUBE_NAMESPACE}
  - kubectl apply -f devops/k8s/service.yml -n ${KUBE_NAMESPACE}

  environment:
    name: dev
  when: on_success
